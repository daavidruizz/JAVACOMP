
import java.util.*;
public class Analizador {
	
	/* 
	 * NOTA IMPORTANTE
	 * 
	 * Esta clase se proporciona solamente para ilustrar el formato de
	 * salida que deberia tener la solucion a este ejericio.
	 * Esta clase debe modificarse completamente para cumplir 
	 * m√≠nimamente los requisitos de esta practica.
	 * Notese que ni siquiera esta completa......
	 */
	
	public static String masCercano(double ratio) {
			if (ratio < 1.5) {                      // aprox 1.0
				return "1";							
			} else if (1 <= ratio && ratio < 3.0) { // aprox 2.0
				return "N";
			} else if (3 <= ratio && ratio < 6.0) { // aprox 4.0
				return "N2";
			} else if (6 <= ratio && ratio < 10.0) { // aprox 8.0
				return "N3";
			} else { 								 // otras
				return "NF";
			}
	}
	
	public static void main(String arg[]) {
		int lista[] = {15000, 550001, 100000, 200000, 500000, 750000, 1000000};
		int lista1[] = {15000, 30000, 50000, 75000, 100000};
		Temporizador t = new Temporizador();
		
		for(int i:lista) {
			System.out.println("Entrada = "+i);
			t.iniciar();
			Algoritmo.f(i);
			t.parar();
			long t1 = t.tiempoPasado();
			System.out.println("T = "+t1+"\n");			
			t.reiniciar();
		}
		
/*
		//REINICIAMOS

		t.iniciar();
		Algoritmo.f(n2);
		t.parar();
		long t2 = t.tiempoPasado();
		double ratio = (double)t2/t1;
		System.out.println(masCercano(ratio));
*/
	}
}
